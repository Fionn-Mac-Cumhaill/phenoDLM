% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rfunctions.R
\name{Rmcmc_DLM_half_Cauchy}
\alias{Rmcmc_DLM_half_Cauchy}
\title{Half-Cauchy DLM MCMC Simulation}
\usage{
Rmcmc_DLM_half_Cauchy(dat, sig2_e0, sig2_w0, s = 46, seas = 2,
  mc = 1000, thin = 1, c0 = c(0.1, 0.1), SVD = FALSE,
  save.theta = TRUE)
}
\arguments{
\item{dat}{vector of length \emph{T} containing a time series of VI data}

\item{sig2_e0}{initial value for observation equation variance \eqn{\sigma_e^2}}

\item{sig2_w0}{initial value for state equation variance \eqn{\sigma_w^2}}

\item{s}{value specifying the period of the Fourier harmonics}

\item{seas}{the number of Fourier harmonics to include in the model (q)}

\item{mc}{integer value specifying the number of MCMC iterations to run}

\item{thin}{degree of thinning of the MCMC chain. Retain every \code{thin}-th iteration, thin=1 retains all iterations.}

\item{c0}{2-dimension vector specifying the scale parameters for the half-Cauchy priors}

\item{SVD}{boolean specifying whether the singular value decomposition (TRUE) or the Cholesky decomposition (FALSE) should be used for matrix operations. Default is TRUE.}

\item{save.theta}{boolean specifying whether samples of the state vector should be retained. Default is TRUE.}
}
\value{
List containing MCMC samples of \eqn{\sigma_e^2}, \eqn{\sigma_w^2}, and \eqn{\theta_{1:T}} (if \code{save.theta = TRUE}) 
\describe{
\item{sigma2s:}{mc x 2 matrix containing MCMC samples of \eqn{\sigma_e^2} (first column) and \eqn{\sigma_w^2} (second column)}
\item{thetas:}{if \code{save_value = TRUE}, a T x p x mc array containing MCMC samples of the latent states}
}
}
\description{
MCMC simulation of the reduced Fourier-form Bayesian DLM with uninformative half-Cauchy priors.
}
\examples{
data(mtci_data) # attach MTCI data

c.mtci <- scale(mtci_data, scale=FALSE) # center MTCI data

ps <- c(10,200) # initial starting precision values

y <- c.mtci[,5] # pull out 5th location

runMCMC <- Rmcmc_DLM_half_Cauchy(y, sig2_e0=1/ps[1], sig2_w0=1/ps[2], s=46, seas=3, mc=100, thin=1) 
# period s = 46
# include first 3 harmonics (seas = 3)
# run 100 MCMC iterations (mc = 100)
# no thinning, (thin = 1)

### Run multiple chains
twochains <- lapply(1:2, function(j) Rmcmc_DLM_half_Cauchy(y, sig2_e0=1/ps[j], 
                                           sig2_w0=1/ps[j], s=46, seas=3, mc=1000, thin=1))  
fits <- par_to_match(twochains) # organize output from two chains
}
