% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rfunctions.R
\name{to_mcmc_list}
\alias{to_mcmc_list}
\title{Convert to \code{mcmc.list()}}
\usage{
to_mcmc_list(mod_out, thin = 1, burn = 0)
}
\arguments{
\item{mod_out}{List of model output as obtained from \code{par_to_match}.}

\item{thin}{Number of iterations to thin the MCMC chains}

\item{burn}{Number of iterations to use as burn-in.}
}
\value{
\code{mcmc.list()} \code{coda} object containing MCMC samples
}
\description{
Function to convert list of samples of \eqn{\sigma_e^2} and \eqn{\sigma_w^2} from multiple MCMC chains from \code{Rmcmc_DLM_IG} or \code{Rmcmc_DLM_half_Cauchy} to \code{coda} object \code{mcmc.list()}. Helpful in order to use MCMC diagnostic functions from the \code{coda} package on chains of \eqn{\sigma_e^2} and \eqn{\sigma_w^2}.
}
\examples{
data(mtci_data) # attach MTCI data

c.mtci <- scale(mtci_data, scale=FALSE) # center MTCI data

ps <- c(10,200) # initial starting precision values

y <- c.mtci[,5] # pull out 5th location

### Run multiple chains
twochains <- lapply(1:2, function(j) Rmcmc_DLM_half_Cauchy(y, sig2_e0=1/ps[j], sig2_w0=1/ps[j], 
                                                           s=46, seas=3, mc=1000, thin=1))  
mcmc_smp <- par_to_match(twochains) # organize output from two chains

fit_coda <- to_mcmc_list(mcmc_smp) # convert to mcmc.list() object

coda::gelman.diag(fit_coda) # compute Gelman-Rubin diagnostic on chains of sigma_e and sigma_w
}
